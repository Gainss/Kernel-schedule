name: Kernel_schedule


on:



jobs:

  build:

    runs-on: ubuntu-latest
    permissions: 
      deployments: write
      pull-requests: write
      contents: write


    steps:

      - uses: actions/checkout@v3

      - name: Load Configuration
        uses: falti/dotenv-action@v1.0.2
        id: config
        with:
          path: config.env

      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.kernel_name }}" "Kernel_Name config"
          required "${{ steps.config.outputs.kernel_branch }}" "Kernel_Branch config"
          required "${{ steps.config.outputs.kernel_url }}" "Kernel_URL config"
          required "${{ steps.config.outputs.anykernel_url }}" "AnyKernel_URL config"
          required "${{ steps.config.outputs.anykernel_branch }}" "AnyKernel_Branch config"
          required "${{ steps.config.outputs.arm_url }}" "ARM_URL config"
          required "${{ steps.config.outputs.arm_branch }}" "ARM_Branch config"
          required "${{ steps.config.outputs.aarch_url }}" "AARCH_URL config"
          required "${{ steps.config.outputs.aarch_branch }}" "AARCH_Branch config"
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV
 
      - name: Git kernel
        run: |
          git clone "${{ steps.config.outputs.kernel_url }}" -b "${{ steps.config.outputs.kernel_branch }}" kernel

      - name: Setup Environment
        run: |
          cd $GITHUB_WORKSPACE/kernel
          git clone "${{ steps.config.outputs.arm_url }}" -b "${{ steps.config.outputs.arm_branch }}" tool/arm
          git clone "${{ steps.config.outputs.aarch_url }}" -b "${{ steps.config.outputs.aarch_branch }}" tool/aarch
          git clone "${{ steps.config.outputs.anykernel_url }}" -b "${{ steps.config.outputs.anykernel_branch }}" tool/AnyKernel
          sh -c "$(curl -sSL https://github.com/akhilnarang/scripts/raw/master/setup/android_build_env.sh/)"

      - name: make kernel
        run: |
          sudo mv build.sh $GITHUB_WORKSPACE/kernel
          cd $GITHUB_WORKSPACE/kernel
          bash ./build.sh

      - name: Upload to Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "kernel/tool/AnyKernel/Gains_Kernel.zip"
          tag: "${{ steps.config.outputs.kernel_name }}_${{ env.BUILD_TIME }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: sender
        uses: actions/setup-python@v4.4.0
        with:
         python-version: '3.x'
         architecture: 'x64'
      - run: pip install -r ./requirements.txt && python ./wechat.py

        env:
         APP_ID: ${{ secrets.APP_ID }}
         APP_SECRET: ${{ secrets.APP_SECRET }}
         TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
         USER_ID: ${{ secrets.USER_ID }}
         START_DATE: ${{ secrets.START_DATE }}

